{"mappings":"ACCA,4KAUA,kHAYA,2JAiBA,oCAMA,2EAOA,yIAWA,kHAQA,kEAKA,+JAWA,0CAMA,kTAgCA,iCAIA,sGAUA,+OAsBA,gEAKA,yEAUA,8DAUA,8GAQA,gEAKA,oGAMA,oHAQA,4IAQA,6EAMA,wJASA,gIASA,2CAgBA","sources":["mced.d3383b43.css","src/editor.css"],"sourcesContent":["html, body {\n  color: #333;\n  background-color: #f0f0f0;\n  height: 100vh;\n  margin: 0;\n  font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica, Arial, sans-serif;\n  overflow: hidden;\n}\n\n.editor-layout {\n  box-sizing: border-box;\n  grid-template-columns: 300px 1fr;\n  gap: 8px;\n  height: 100%;\n  padding: 8px;\n  display: grid;\n}\n\n#power-library-panel {\n  background-color: #fff;\n  border-radius: 8px;\n  flex-direction: column;\n  min-width: 0;\n  display: flex;\n  overflow-y: auto;\n  box-shadow: 0 2px 4px #0000001a;\n}\n\n#power-list {\n  flex-grow: 1;\n  padding: 8px;\n}\n\n#main-content-panel {\n  flex-direction: column;\n  gap: 8px;\n  min-width: 0;\n  display: flex;\n}\n\n#controls {\n  background: #fff;\n  border-radius: 8px;\n  flex-wrap: wrap;\n  flex-shrink: 0;\n  gap: 8px;\n  padding: 8px;\n  display: flex;\n  box-shadow: 0 2px 4px #0000001a;\n}\n\n#controls button {\n  cursor: pointer;\n  background-color: #f7f7f7;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  padding: 6px 12px;\n}\n\n#controls button:hover {\n  background-color: #e9e9e9;\n  border-color: #bbb;\n}\n\n#editor-preview-pane {\n  background-color: #fff;\n  border: 1px solid #ccc;\n  border-radius: 8px;\n  flex-direction: column;\n  flex-grow: 1;\n  min-height: 0;\n  display: flex;\n  overflow: hidden;\n}\n\n#blocklyDiv {\n  flex-grow: 1;\n  position: relative;\n}\n\n#code-container {\n  color: #f8f8f2;\n  box-sizing: border-box;\n  white-space: pre-wrap;\n  overflow-wrap: break-word;\n  word-break: break-word;\n  background-color: #272822;\n  border-top: 1px solid #444;\n  flex-shrink: 0;\n  height: 250px;\n  margin: 0;\n  padding: 1em;\n  font-family: Fira Code, Dank Mono, monospace;\n  font-size: 14px;\n  line-height: 1.5;\n  overflow: auto;\n}\n\n[x-cloak] {\n  display: none !important;\n}\n\n.modal-overlay {\n  z-index: 1000;\n  background-color: #0009;\n  width: 100%;\n  height: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n}\n\n.modal-content {\n  z-index: 1001;\n  background-color: #fff;\n  border-radius: 12px;\n  width: 90%;\n  max-width: 500px;\n  padding: 25px;\n  transition: all .2s ease-out;\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%)scale(1);\n  box-shadow: 0 5px 15px #0000004d;\n}\n\n.enter-start {\n  opacity: 0;\n  transform: translate(-50%, -50%)scale(.95);\n}\n\n.enter-end, .leave-start {\n  opacity: 1;\n  transform: translate(-50%, -50%)scale(1);\n}\n\n.leave-end {\n  opacity: 0;\n  transform: translate(-50%, -50%)scale(.95);\n}\n\n.editor-layout {\n  grid-template-columns: 300px 1fr;\n  transition: grid-template-columns .25s ease-in-out;\n  display: grid;\n}\n\n.editor-layout.library-collapsed {\n  grid-template-columns: 45px 1fr;\n}\n\n#code-container {\n  transition: height .25s ease-in-out, padding .25s ease-in-out, border .25s ease-in-out;\n}\n\n#editor-preview-pane.code-pane-collapsed #code-container {\n  border-top-width: 0;\n  height: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n}\n\n.panel-header {\n  border-bottom: 1px solid #e0e0e0;\n  flex-shrink: 0;\n  justify-content: space-between;\n  align-items: center;\n  padding: 12px 16px;\n  display: flex;\n}\n\n#power-library-panel h2 {\n  border-bottom: none;\n  margin: 0;\n  padding: 0;\n  font-size: 16px;\n}\n\n.code-header {\n  color: #555;\n  background-color: #f7f7f7;\n  border-top: 1px solid #ccc;\n  border-bottom: 1px solid #ccc;\n  padding: 4px 10px;\n  font-size: 13px;\n  font-weight: 500;\n}\n\n.toggle-btn {\n  cursor: pointer;\n  background: none;\n  border: 1px solid #0000;\n  border-radius: 4px;\n  padding: 2px 6px;\n  font-size: 16px;\n  line-height: 1;\n}\n\n.toggle-btn:hover {\n  background-color: #e0e0e0;\n}\n\n#editor-preview-pane.code-pane-collapsed #code-container {\n  border-top-width: 0;\n  height: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n  overflow: hidden;\n}\n/*# sourceMappingURL=mced.d3383b43.css.map */\n","/* General layout for the entire page */\nhtml, body {\n    height: 100vh; /* Use 100% of the viewport height */\n    margin: 0;\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif;\n    background-color: #f0f0f0;\n    color: #333;\n    overflow: hidden; /* Prevent the body itself from scrolling */\n}\n\n/* --- The Main Two-Panel Grid Layout --- */\n.editor-layout {\n    display: grid;\n    /* This is the key: it defines two columns.\n       The first is 300px wide. The second takes up the remaining space (1fr). */\n    grid-template-columns: 300px 1fr;\n    height: 100%;\n    gap: 8px; /* A small gap between the panels */\n    padding: 8px;\n    box-sizing: border-box;\n}\n\n/* --- Left Panel: Power Library --- */\n#power-library-panel {\n    background-color: #ffffff;\n    border-radius: 8px;\n    box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n    display: flex;\n    flex-direction: column;\n    overflow-y: auto; /* Allow scrolling if the list of powers is long */\n    min-width: 0;\n}\n\n#power-library-panel h2 {\n    padding: 12px 16px;\n    margin: 0;\n    border-bottom: 1px solid #e0e0e0;\n    font-size: 16px;\n}\n\n#power-list {\n    padding: 8px;\n    flex-grow: 1; /* Allow the list to fill the available space */\n}\n\n/* --- Right Panel: Main Content --- */\n#main-content-panel {\n    display: flex;\n    flex-direction: column; /* Stack the toolbar, editor, and preview vertically */\n    gap: 8px;\n    min-width: 0;\n}\n\n#controls {\n    flex-shrink: 0; /* Prevent the control bar from shrinking */\n    background: #ffffff;\n    padding: 8px;\n    border-radius: 8px;\n    box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n    display: flex;\n    flex-wrap: wrap; /* Allow buttons to wrap on smaller screens */\n    gap: 8px;\n}\n\n#controls button {\n    padding: 6px 12px;\n    border: 1px solid #ccc;\n    background-color: #f7f7f7;\n    border-radius: 4px;\n    cursor: pointer;\n}\n\n#controls button:hover {\n    background-color: #e9e9e9;\n    border-color: #bbb;\n}\n\n#editor-preview-pane {\n    flex-grow: 1; /* This pane will take up the remaining vertical space */\n    display: flex;\n    flex-direction: column; /* To stack Blockly and the code display */\n    border: 1px solid #ccc;\n    border-radius: 8px;\n    overflow: hidden; /* Hide anything that spills out */\n    background-color: #ffffff;\n    min-height: 0; /* Add this for better flexbox behavior in some browsers */\n}\n\n#blocklyDiv {\n    flex-grow: 1; /* Blockly editor takes up most of the space in this pane */\n    position: relative; /* Needed for Blockly's UI elements */\n}\n/* In src/editor.css */\n\n#code-container {\n    height: 250px;\n    flex-shrink: 0;\n    margin: 0;\n    overflow: auto; /* For vertical scrolling */\n    background-color: #272822;\n    color: #f8f8f2;\n    border-top: 1px solid #444;\n    font-family: 'Fira Code', 'Dank Mono', monospace;\n    font-size: 14px;\n    line-height: 1.5;\n    padding: 1em;\n    box-sizing: border-box;\n\n    /* --- CORRECTED WRAPPING RULES --- */\n\n    /* 1. Primary rule: Preserve whitespace but wrap lines. */\n    white-space: pre-wrap;\n\n    /* 2. Preferred rule for breaking long words that would otherwise overflow. */\n    /* It will only break a word if the word itself is too long to fit on a line. */\n    overflow-wrap: break-word;\n\n    /* 3. A fallback/additional rule for compatibility. `break-all` is more aggressive */\n    /* but `break-word` is often a good companion to overflow-wrap. */\n    word-break: break-word;\n}\n\n/* In src/editor.css */\n\n/* --- MODAL STYLES --- */\n\n[x-cloak] {\n    display: none !important;\n}\n\n.modal-overlay {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.6);\n    z-index: 1000;\n}\n\n.modal-content {\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    /* Start with the final transform state so transitions work correctly */\n    transform: translate(-50%, -50%) scale(1);\n    background-color: white;\n    padding: 25px;\n    border-radius: 12px;\n    box-shadow: 0 5px 15px rgba(0,0,0,0.3);\n    z-index: 1001;\n    width: 90%;\n    max-width: 500px;\n    /* Define the transition properties on the base class */\n    transition: all 0.2s ease-out;\n}\n\n\n/* --- CORRECTED ALPINE.JS TRANSITION CLASSES --- */\n/* These are the classes that Alpine v3 actually adds to the element */\n\n/* State BEFORE the element enters. It's invisible and slightly smaller. */\n.enter-start {\n    opacity: 0;\n    transform: translate(-50%, -50%) scale(0.95);\n}\n/* State AFTER the element has finished entering. Fully visible. */\n.enter-end {\n    opacity: 1;\n    transform: translate(-50%, -50%) scale(1);\n}\n/* State BEFORE the element starts to leave. Fully visible. */\n.leave-start {\n    opacity: 1;\n    transform: translate(-50%, -50%) scale(1);\n}\n/* State AFTER the element has finished leaving. Invisible. */\n.leave-end {\n    opacity: 0;\n    transform: translate(-50%, -50%) scale(0.95);\n}\n\n/* In src/editor.css */\n\n/* --- ADD these styles for the collapsible logic --- */\n\n/* Add a transition to the grid layout for smooth sidebar animation */\n.editor-layout {\n    display: grid;\n    grid-template-columns: 300px 1fr;\n    transition: grid-template-columns 0.25s ease-in-out;\n    /* ... other existing styles ... */\n}\n\n/* When the library is collapsed, animate the grid column to a small width */\n.editor-layout.library-collapsed {\n    grid-template-columns: 45px 1fr; /* Shrink to just wide enough for the button */\n}\n\n/* Add a transition for the code container's height and padding */\n#code-container {\n    transition: height 0.25s ease-in-out, padding 0.25s ease-in-out, border 0.25s ease-in-out;\n    /* ... all your other existing styles for #code-container ... */\n}\n\n/* When the code pane is collapsed, set the code container's height to 0 */\n#editor-preview-pane.code-pane-collapsed #code-container {\n    height: 0;\n    padding-top: 0;\n    padding-bottom: 0;\n    border-top-width: 0;\n}\n\n/* --- You may also need to add these styles for the new panel-header --- */\n.panel-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 12px 16px;\n    border-bottom: 1px solid #e0e0e0;\n    flex-shrink: 0; /* Prevent header from shrinking when content scrolls */\n}\n#power-library-panel h2 {\n    padding: 0; /* Remove padding from h2 since it's now in panel-header */\n    border-bottom: none;\n    margin: 0;\n    font-size: 16px;\n}\n.code-header {\n    padding: 4px 10px;\n    background-color: #f7f7f7;\n    border-top: 1px solid #ccc;\n    border-bottom: 1px solid #ccc;\n    color: #555;\n    font-size: 13px;\n    font-weight: 500;\n}\n.toggle-btn {\n    background: none;\n    border: 1px solid transparent;\n    border-radius: 4px;\n    cursor: pointer;\n    font-size: 16px;\n    line-height: 1;\n    padding: 2px 6px;\n}\n.toggle-btn:hover {\n    background-color: #e0e0e0;\n}\n\n\n/* --- THE FIX --- */\n\n/* When the parent pane is marked as collapsed... */\n#editor-preview-pane.code-pane-collapsed .code-header {\n    /* You might want to keep the header visible to allow re-opening,\n       but we can hide the text inside it if we want.\n       Or just let it be. The toggle button is what matters. */\n}\n\n/* ...target the code container and set its height to 0. */\n/* This makes it take up no space in the flex layout. */\n#editor-preview-pane.code-pane-collapsed #code-container {\n    height: 0;\n    padding-top: 0;\n    padding-bottom: 0;\n    border-top-width: 0;\n    overflow: hidden; /* Hide scrollbars during collapse */\n}\n\n/*\nBecause #code-container now takes up 0 height, the #blocklyDiv (with its flex-grow: 1)\nwill automatically expand to fill the space that was just freed up inside the\n#editor-preview-pane flex container.\n*/"],"names":[],"version":3,"file":"mced.d3383b43.css.map"}